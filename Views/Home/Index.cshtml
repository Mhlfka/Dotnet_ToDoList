@model IEnumerable<ToDoListApp.Models.TaskItem>

<head>
    <link rel="stylesheet" href="~/css/custom.css" asp-append-version="true" />
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<header>
    <nav>
        <div class="container-fluid">
            @if (User.Identity.IsAuthenticated)
            {
                <span class="navbar-text">@User.Identity.Name</span>
                <form asp-controller="Account" asp-action="Logout" method="post">
                    <button type="submit" class="btn btn-link">Logout</button>
                </form>
            }
            else
            {
                <a asp-controller="Account" asp-action="Login" class="nav-link text-dark">Login</a>
                <a asp-controller="Account" asp-action="Register" class="nav-link text-dark">Register</a>
            }
        </div>
    </nav>
</header>

<div class="todo-container">
    <h1>To-Do List</h1>
    

    <!-- Filtering Form -->
    <form method="get" asp-action="Index" asp-controller="Task">
        <label for="description">Description:</label>
        <input type="text" name="description" id="description" />

        <label for="dueDate">Due Date & Time:</label>
        <input type="datetime-local" name="dueDate" id="dueDate" />

        <label for="isCompleted">Status:</label>
        <select name="isCompleted" id="isCompleted">
            <option value="">All</option>
            <option value="true">Completed</option>
            <option value="false">Pending</option>
        </select>

        <button type="submit">Filter</button>
        <a asp-controller="Task" asp-action="Index" class="reset-btn">Reset</a>
    </form>

    @if (ViewData["NoTasksFound"] != null)
    {
        <div class="alert alert-danger mt-3" role="alert">
            @ViewData["NoTasksFound"]
        </div>
    }


    <button class="add-task-btn" onclick="location.href='@Url.Action("Create", "Task")'">Add New Task</button>

    <table>
        <thead>
            <tr>
                <th>Description</th>
                <th>Due Date & Time</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var backgroundColor = "";
                var textColor = "";

                if (item.DueDate.Date == DateTime.Today && !item.IsCompleted)
                {
                    backgroundColor = "background-color: #E5F100;";
                }
                else if (item.DueDate.Date < DateTime.Today && !item.IsCompleted)
                {
                    backgroundColor = "background-color: #FF7376; color: white;";
                }

                <tr style="@backgroundColor @textColor">
                    <td>@item.Description</td>
                    <td>@item.DueDate.ToString("yyyy-MM-dd HH:mm")</td> <!-- Displays Date & Time -->
                    <td>
                        <input type="checkbox" class="status-checkbox"
                               data-task-id="@item.Id" @(item.IsCompleted ? "checked" : "") />
                        <span class="status-text" id="status-@item.Id">
                            @(item.IsCompleted ? "Done" : "Pending")
                        </span>
                    </td>
                    <td class="no-bg">
                        <button class="edit-btn"
                                onclick="location.href='@Url.Action("Edit", "Task", new { id = item.Id })'">Edit</button>
                        <button class="delete-btn"
                                onclick="location.href='@Url.Action("Delete", "Task", new { id = item.Id })'">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>

<script>
    $(document).ready(function () {
        $(".status-checkbox").change(function () {
            var taskId = $(this).data("task-id");
            var isCompleted = $(this).is(":checked");
            var statusText = $("#status-" + taskId);
            
            $.ajax({
                url: "/Task/ToggleStatus",
                type: "POST",
                data: { id: taskId, isCompleted: isCompleted },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        statusText.text(isCompleted ? "Done" : "Pending");
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert("Failed to update task status.");
                }
            });
        });
    });
</script>

